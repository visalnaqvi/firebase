from qdrant_client import QdrantClient
from qdrant_client.http.models import Filter, FieldCondition, MatchValue

client = QdrantClient(url="http://localhost:6333")

print("Client type:", type(client))
print("Has search method:", hasattr(client, "search"))

# Filter to exclude a specific person_id
filter_obj = Filter(
    must_not=[
        FieldCondition(key="person_id", match=MatchValue(value="some-person-id"))
    ]
)

# Search for similar embeddings excluding the specified person_id
results = client.query_points(
    collection_name="test",
    query=[-0.012149004,-0.024465414,0.015199647,-0.027983079,0.04752886,-0.0053208047,0.03528929,-0.05474689,-0.05618128,-0.03574287,0.010982691,-0.096490905,-0.025659561,-0.02887008,0.024497323,-0.11949992,-0.05083058,-0.023652984,0.059255317,0.05190483,0.084829666,-0.023915073,0.055038054,0.0051853643,0.06810768,0.004364547,-0.005888735,-0.0039799754,0.06893365,-0.014492583,0.097235635,0.07705082,-0.044132926,-0.013641983,0.0075662304,0.03860369,-0.012185792,-0.011362914,-0.0036135674,-0.035683293,-0.01887856,0.005732489,0.020614963,0.047908567,0.0031678702,0.034708023,-0.009945826,0.056633335,0.03588461,0.010228633,-0.01851061,-0.07340776,-0.029574981,0.060134146,-0.025643883,-0.019916566,0.021839656,-0.03893852,0.054685965,0.02861642,-0.028323857,-0.014769779,-0.016354006,-0.010347003,0.013296854,0.008231104,0.047927618,-0.061643414,0.041376963,0.057488687,-0.049974825,0.0106169935,0.041899543,0.041885838,0.00832446,-0.02346072,-0.0881866,-0.06167209,0.004536606,0.032214608,-0.016589535,-0.003529183,-0.0017923258,-0.0054619657,-0.006211167,0.0061838767,0.015013449,-0.012178166,0.098574884,0.007855025,-0.042077314,0.071286134,0.013136696,-0.03704068,0.0411287,-0.017268328,0.023713741,-0.068444945,0.0068662576,0.057041604,0.04523212,0.024580361,-0.025223354,-0.09375311,-0.017620109,0.0077391155,-0.0030577604,0.069583416,0.01533069,-0.07886391,-0.028467087,0.02390068,0.032718442,-0.0042992127,0.052899543,0.03227179,-0.03429767,0.0034111247,-0.043877374,-0.02173356,0.0018415233,0.040102456,0.032577235,-0.0032455986,-0.026795257,0.01185382,-0.05857718,-0.011327992,0.025317438,0.066439375,-0.098837055,-0.009295052,0.072770685,-0.007583142,0.045700118,-0.015448418,0.04046691,-0.06454981,0.013899119,-0.050198063,0.0069035986,-0.027028069,0.016929774,-0.051538024,0.06881386,0.06551361,0.024402417,0.00577232,-0.0766798,0.035056386,0.09975789,-0.039178994,0.03979207,-0.0058161854,0.035500273,-0.04210018,0.041371025,-0.061648175,0.04809906,-0.07099463,-0.047987323,-0.06811884,-0.057130866,-0.009808002,0.074300304,0.011100527,-0.053478315,-0.12027378,0.0032302598,0.051661454,0.06241228,-0.024606239,0.041280445,-0.11756615,0.00613361,0.03490802,-0.077566564,0.014463046,-0.015299966,0.013546508,-0.053459954,-0.022418858,-0.030519748,0.052872468,-0.0007562528,0.057519834,-0.0014604563,-0.03563354,0.050079495,-0.058238387,0.06031544,-0.004102398,-0.038048297,-0.012767968,-0.03324797,-0.067808695,0.060014658,0.019093405,-0.045867473,0.025771558,-0.014987919,-0.027878782,-0.05267539,-0.049215823,-0.024700224,0.00030822426,0.0021470713,0.018500015,-0.016243495,0.03973322,0.055013143,-0.036415946,0.006744059,-0.04467148,-0.07310277,-0.031267732,0.018830523,0.004908906,-0.0060321973,0.023606615,-0.020790115,-0.0471019,0.01920427,-0.0204932,0.05284459,0.011084189,-0.035805337,0.011877789,-0.047665056,0.05404527,-0.092942856,-0.0033628428,0.045111146,0.006286136,-0.052761573,-0.041690104,0.006360072,-0.023274725,-0.027841866,0.022795334,0.01501526,0.06133171,-0.034922842,-0.04771447,0.044267815,0.0605792,-0.0028668977,-0.011699939,0.04965367,0.019019213,-0.07867916,-0.009974784,-0.019542372,-0.054780137,-0.09788334,0.04411999,0.025915591,-0.047617428,-0.042572364,-0.030523118,-0.0077173933,-0.015362127,-0.066471346,-0.027601328,0.021200405,0.01819231,-0.048111092,-0.012842909,0.060938537,-0.0931458,0.051865716,0.09479642,0.022579206,0.032078445,0.007166393,-0.07043489,-0.0056979745,-0.09284321,-0.06715144,-0.04036038,-0.04002091,0.046231363,-0.056109965,-0.02254862,-0.012855364,-0.07459568,-0.041809864,0.03135384,0.021511357,0.006232021,0.05522184,-0.011420604,0.026025658,-0.053410508,0.07151318,-0.010662062,-0.08844919,0.0060106074,0.01606447,0.036455214,-0.007330951,-0.019100366,0.025154447,-0.037263818,0.023221724,-0.034786247,-0.031684414,0.033255175,0.072364464,-0.0089563085,-0.021916905,-0.059493024,0.006739336,-0.024434485,-0.022358196,-0.02055351,0.042890046,0.020648954,0.04790253,0.017934838,-0.017320458,0.014483842,-0.016758617,0.038508683,-0.050914302,-0.028442748,0.043983173,-0.0025598195,0.00055315177,0.02981441,0.031487375,0.009922427,-0.026105432,-0.010509219,0.05345975,0.010617149,0.013586264,0.011032992,0.10682575,-0.033521432,-0.007071311,0.04038141,-0.011638193,-0.02092226,-0.04539711,-0.031252198,-0.03690053,0.046210486,-0.049484782,-0.063220136,0.060237706,-0.074210785,-0.10657943,-0.043226704,0.022617886,0.024520924,0.009780098,0.05154937,0.010366014,0.04503348,-0.06827199,-0.03648488,0.0038845905,-0.04903569,0.013889735,0.033856783,0.015734287,0.055481818,0.032244336,0.026236603,-0.039310377,-0.031142496,0.0125362305,-0.02633244,-0.09817166,0.036190804,-0.02671781,0.03686462,0.116181724,0.038901195,-0.016453318,-0.00835475,-0.0030147086,0.041815862,0.0032796029,-0.065146,0.092679344,0.00890397,0.0635172,0.0025240807,-0.004238262,-0.03028932,-0.011358498,0.0006202253,0.09929671,0.053379096,-0.05101272,-0.006986033,0.05843216,-0.049513757,-0.06304317,0.0765505,0.03976245,0.04885956,0.00818391,0.009028583,-0.015342428,-0.054875314,0.05363254,-0.044805944,-0.010062238,-0.0073726205,-0.01900101,0.029366797,0.07256809,0.050813608,0.010957373,-0.09081591,0.016977167,0.030893728,-0.005366326,0.012984037,0.017349439,-0.06133469,-0.046183705,0.009400962,0.107209824,0.014530316,-0.064195335,-0.0069034533,0.10712483,0.041813686,0.02390827,0.039093986,0.09777127,-0.034837592,0.026550626,0.03397282,0.017989842,-0.017277777,-0.027251909,-0.033767186,-0.045191903,-0.01793214,0.07780245,-0.06366285,0.023264425,-0.06289202,0.04779098,0.05713834,-0.12862499,0.039915606,-0.027221227,-0.029243223,-0.031559777,-0.01312547,-0.05282492,-0.049014498,-0.00036281536,-0.0505204,-0.013257851,0.048697084,0.014611928,-0.0679632,0.045488007,0.027440231,-0.054763887,0.023278173,-0.06594077,-0.018748464,0.07635915,-0.033312626,-0.012521761,-0.017248537,0.01807971,-0.031284194,0.010102816,0.051596783,-0.030859891,-0.09519977,0.006021446,0.039022546,0.030481545,0.009489223,-0.0114055555,-0.051792886,-0.016037,-0.036890008,0.033191234,0.039232317,0.023337949,-0.054289017,0.018633876,0.10944431,0.0027586978,-0.037871283,0.033401925,-0.024886832,-0.04763215,-0.00611552,-0.05896764,-0.0059989267,0.02648913,-0.04773725,-0.010287292,0.07432306,-0.017312206,-0.00860274,0.07129137,0.04090901,0.017641183,-0.019299591],  # Replace with your actual embedding vector
    limit=5,
    query_filter=filter_obj,  
    using="cloth",
    score_threshold=0.5,
    with_payload=True,
    with_vectors=True,
)

print("Results:", results)

# If you want to see the structure of results
if results:
    print("\nFirst result structure:")
    print("ID:", results[0].id)
    print("Score:", results[0].score)
    print("Payload:", results[0].payload)